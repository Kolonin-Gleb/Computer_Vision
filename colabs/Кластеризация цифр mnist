{"nbformat":4,"nbformat_minor":0,"metadata":{"accelerator":"GPU","colab":{"provenance":[{"file_id":"18oBykoks_3Ut6CsQCD8WxnOBm__5jEIH","timestamp":1681730813037},{"file_id":"1bnb4VGV8Ugxg7dNnR3xKHI0z3WUwnLrp","timestamp":1633410229608}]},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["Выполнение задания   \n","https://ithub.bulgakov.app/lessons/60903   \n","\n"],"metadata":{"id":"REB8EL_uZF1W"}},{"cell_type":"markdown","source":["## Использование кластеризации для 'классификации' изображений"],"metadata":{"id":"OODaalRu-j4a"}},{"cell_type":"code","metadata":{"id":"fwb29WkEYDW5"},"source":["from tensorflow.keras.models import Sequential # Последовательная н.с.\n","from tensorflow.keras.layers import Dense, Activation, Dropout, BatchNormalization # Основные слои н.с.\n","from tensorflow.keras.datasets import mnist # Набор данных mnist\n","from tensorflow.keras import utils # Утилиты для to_categorical\n","from tensorflow.keras.preprocessing import image # Для отрисовки изображения\n","from tensorflow.keras.optimizers import Adam, Adadelta # Алгоритмы оптимизации, для настройки скорости обучения\n","import numpy as np # Библиотека работы с массивами\n","import matplotlib.pyplot as plt # Отрисовка изображений\n","from PIL import Image # Работа с изображениями\n","from random import randint\n","\n","# Отрисовывать изображения в ноутбуке, а не в консоль или файл\n","%matplotlib inline"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"uNOYPoTLYVOa"},"source":["# Загружаем набор данных (датасет) MNIST\n","(x_train, y_train_original), (x_test, y_test_original) = mnist.load_data()\n","\n","#x_train - вопросы для обучения y_train_original - ответы для обучения\n","#x_test  - вопросы для теста    y_test_original  - ответы для теста"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"HZSYeHRBYwo-","executionInfo":{"status":"ok","timestamp":1638351734033,"user_tz":-180,"elapsed":11,"user":{"displayName":"Глеб Колонин","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"16800121630135430864"}},"outputId":"66677115-1c63-4369-dbe3-a4f52893b7f9"},"source":["print(\"Размер обучающей выборки\")\n","print(x_train.shape)\n","# 60000 - кол. изображений 28 - высота и ширина\n","print()\n","\n","print(\"Размер тестовой выборки\")\n","print(x_test.shape)"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Размер обучающей выборки\n","(60000, 28, 28)\n","\n","Размер тестовой выборки\n","(10000, 28, 28)\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":195},"id":"AKSYpD83ZOWS","executionInfo":{"status":"ok","timestamp":1638351735253,"user_tz":-180,"elapsed":1227,"user":{"displayName":"Глеб Колонин","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"16800121630135430864"}},"outputId":"d8a9047f-747c-4350-e38d-03f3ff1232ab"},"source":["# Выводим для примера картинки из x_train и верные ответы из y_train\n","\n","# Создаем полотно из 10 графиков\n","fig, axs = plt.subplots(1, 10, figsize=(25, 3)) \n","\n","y = ''\n","for i in range(10): # Будем выводить 10 элементов\n","  index = randint(0, 59999)\n","  img = x_train[index] # Выбираем из x_train случайное изображение\n","  y += str(y_train_original[index]) + \" \" # Записываем верный ответ\n","  axs[i].imshow(Image.fromarray(img), cmap='gray') # Добавляем изображение в коллекцию\n","\n","plt.show() #Показываем изображения\n","\n","print(\"\\nLabels: \", y)"],"execution_count":null,"outputs":[{"output_type":"display_data","data":{"image/png":"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\n","text/plain":["<Figure size 1800x216 with 10 Axes>"]},"metadata":{"needs_background":"light"}},{"output_type":"stream","name":"stdout","text":["\n","Labels:  3 1 9 0 1 2 4 0 8 1 \n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"zQyBZD96aFCe","executionInfo":{"status":"ok","timestamp":1638351735258,"user_tz":-180,"elapsed":17,"user":{"displayName":"Глеб Колонин","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"16800121630135430864"}},"outputId":"cd9a58e9-f761-4cfb-f922-8dd3ca892bfc"},"source":["# Превращаем y_train и y_test сетей в формат one hot encoding\n","# 1 стоит на позиции верного ответа.\n","# В остальных позициях стоит 0\n","# Формат OHE позволяет н.с. учитсья с вероятностями того, чем является изображение.\n","y_train = utils.to_categorical(y_train_original, 10)\n","y_test = utils.to_categorical(y_test_original, 10)\n","\n","print(\"Обучающая выборка:\")\n","print(y_train_original[5], \"->\", y_train[5])\n","print(y_train_original[234], \"->\", y_train[234])\n","print(y_train_original[55477], \"->\", y_train[55477])\n","print(y_train_original[14848], \"->\", y_train[14848])\n","print()\n","\n","print(\"Тестовая выборка:\")\n","print(y_train_original[15], \"->\", y_train[15])\n","print(y_train_original[334], \"->\", y_train[334])\n","print(y_train_original[8477], \"->\", y_train[8477])\n","print(y_train_original[3768], \"->\", y_train[3768])\n"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Обучающая выборка:\n","2 -> [0. 0. 1. 0. 0. 0. 0. 0. 0. 0.]\n","0 -> [1. 0. 0. 0. 0. 0. 0. 0. 0. 0.]\n","9 -> [0. 0. 0. 0. 0. 0. 0. 0. 0. 1.]\n","6 -> [0. 0. 0. 0. 0. 0. 1. 0. 0. 0.]\n","\n","Тестовая выборка:\n","7 -> [0. 0. 0. 0. 0. 0. 0. 1. 0. 0.]\n","9 -> [0. 0. 0. 0. 0. 0. 0. 0. 0. 1.]\n","4 -> [0. 0. 0. 0. 1. 0. 0. 0. 0. 0.]\n","5 -> [0. 0. 0. 0. 0. 1. 0. 0. 0. 0.]\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ZMwa6K-4dbnL","executionInfo":{"status":"ok","timestamp":1638351735261,"user_tz":-180,"elapsed":16,"user":{"displayName":"Глеб Колонин","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"16800121630135430864"}},"outputId":"9b30f540-3fcf-4c8c-d4ac-5d5f3f60ea20"},"source":["# Преобразование картинок в последовательности цифр (выравнивание)\n","# Это нужно, т.к. н.с. работает только с 1 мерными массивами\n","\n","x_train = x_train.reshape(x_train.shape[0], 28*28)\n","x_test = x_test.reshape(x_test.shape[0], 28*28)\n","\n","print(\"Размерность x_train: \", x_train.shape)\n","print(\"Размерность x_test: \", x_test.shape)"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Размерность x_train:  (60000, 784)\n","Размерность x_test:  (10000, 784)\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"p3-TBli4ikI0","executionInfo":{"status":"ok","timestamp":1638351736193,"user_tz":-180,"elapsed":946,"user":{"displayName":"Глеб Колонин","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"16800121630135430864"}},"outputId":"f06898da-334f-4985-aee5-ff3ca1946d85"},"source":["# Нормализация картинок (приведение значений, которыми описаны изображения к диапозону от 0 до 1)\n","# Это нужно, т.к. н.с. будет обучаться с исп. GPU, который лучше работает с дробными числами.\n","# Нормализованные значения в диапозоне от о до 1 это и есть дробные числа\n","\n","print(\"Изначальные значения:\")\n","print(x_train[10][120:135]) # Для приимера выводятся значения пикселей из опр. диапозона\n","print()\n","\n","x_train = x_train / 255\n","x_test = x_test / 255\n","\n","print(\"Значения после нормализации:\")\n","print(x_train[10][120:135])# Для приимера выводятся значения пикселей из опр. диапозона"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Изначальные значения:\n","[  0   0   0  42 118 219 166 118 118   6   0   0   0   0   0]\n","\n","Значения после нормализации:\n","[0.         0.         0.         0.16470588 0.4627451  0.85882353\n"," 0.65098039 0.4627451  0.4627451  0.02352941 0.         0.\n"," 0.         0.         0.        ]\n"]}]},{"cell_type":"code","metadata":{"id":"C-O5ImjWfPsw"},"source":["# Задаём batch_size\n","batch_size = 128 \n","\n","# Создаем последовательную модель нейронной сети\n","model = Sequential()\n","# Выравнивающий слой\n","model.add(Dense(784, input_dim=784, activation='relu'))\n","# Полносвязный скрытый слой\n","model.add(Dense(128, activation='relu'))\n","# Слой классификации\n","model.add(Dense(10, activation='softmax'))\n","\n","# Компилируем сеть\n","model.compile(loss=\"categorical_crossentropy\", optimizer=Adam(learning_rate=0.01), metrics=[\"accuracy\"])"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"6Y8afKx-aAv9","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1638351736196,"user_tz":-180,"elapsed":18,"user":{"displayName":"Глеб Колонин","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"16800121630135430864"}},"outputId":"d133d4c6-5999-40ff-d028-dd0d1ce6fa7c"},"source":["model.summary()"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Model: \"sequential_2\"\n","_________________________________________________________________\n"," Layer (type)                Output Shape              Param #   \n","=================================================================\n"," dense_6 (Dense)             (None, 784)               615440    \n","                                                                 \n"," dense_7 (Dense)             (None, 128)               100480    \n","                                                                 \n"," dense_8 (Dense)             (None, 10)                1290      \n","                                                                 \n","=================================================================\n","Total params: 717,210\n","Trainable params: 717,210\n","Non-trainable params: 0\n","_________________________________________________________________\n"]}]},{"cell_type":"code","metadata":{"id":"chJoSq4HgxK-","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1638351765594,"user_tz":-180,"elapsed":29413,"user":{"displayName":"Глеб Колонин","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"16800121630135430864"}},"outputId":"fb749bbb-d2a4-4e71-e226-c73da8bc7aa7"},"source":["# Обучаем нейросеть\n","\n","history = model.fit(x_train, \n","                    y_train, \n","                    batch_size=batch_size, \n","                    epochs=25,\n","                    validation_split=0.2,\n","                    verbose=1)"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/25\n","375/375 [==============================] - 2s 4ms/step - loss: 0.2692 - accuracy: 0.9213 - val_loss: 0.1328 - val_accuracy: 0.9627\n","Epoch 2/25\n","375/375 [==============================] - 1s 3ms/step - loss: 0.1230 - accuracy: 0.9625 - val_loss: 0.1256 - val_accuracy: 0.9628\n","Epoch 3/25\n","375/375 [==============================] - 1s 3ms/step - loss: 0.0963 - accuracy: 0.9714 - val_loss: 0.1341 - val_accuracy: 0.9623\n","Epoch 4/25\n","375/375 [==============================] - 1s 3ms/step - loss: 0.0794 - accuracy: 0.9767 - val_loss: 0.1299 - val_accuracy: 0.9672\n","Epoch 5/25\n","375/375 [==============================] - 1s 3ms/step - loss: 0.0809 - accuracy: 0.9762 - val_loss: 0.1480 - val_accuracy: 0.9652\n","Epoch 6/25\n","375/375 [==============================] - 1s 3ms/step - loss: 0.0725 - accuracy: 0.9792 - val_loss: 0.1181 - val_accuracy: 0.9707\n","Epoch 7/25\n","375/375 [==============================] - 1s 3ms/step - loss: 0.0580 - accuracy: 0.9832 - val_loss: 0.1638 - val_accuracy: 0.9646\n","Epoch 8/25\n","375/375 [==============================] - 1s 3ms/step - loss: 0.0643 - accuracy: 0.9821 - val_loss: 0.1856 - val_accuracy: 0.9661\n","Epoch 9/25\n","375/375 [==============================] - 1s 3ms/step - loss: 0.0788 - accuracy: 0.9795 - val_loss: 0.1851 - val_accuracy: 0.9659\n","Epoch 10/25\n","375/375 [==============================] - 1s 3ms/step - loss: 0.0611 - accuracy: 0.9842 - val_loss: 0.1464 - val_accuracy: 0.9702\n","Epoch 11/25\n","375/375 [==============================] - 1s 3ms/step - loss: 0.0521 - accuracy: 0.9866 - val_loss: 0.1526 - val_accuracy: 0.9712\n","Epoch 12/25\n","375/375 [==============================] - 1s 3ms/step - loss: 0.0533 - accuracy: 0.9861 - val_loss: 0.1856 - val_accuracy: 0.9668\n","Epoch 13/25\n","375/375 [==============================] - 1s 3ms/step - loss: 0.0543 - accuracy: 0.9859 - val_loss: 0.1693 - val_accuracy: 0.9706\n","Epoch 14/25\n","375/375 [==============================] - 1s 3ms/step - loss: 0.0388 - accuracy: 0.9898 - val_loss: 0.1897 - val_accuracy: 0.9705\n","Epoch 15/25\n","375/375 [==============================] - 1s 3ms/step - loss: 0.0468 - accuracy: 0.9884 - val_loss: 0.1908 - val_accuracy: 0.9718\n","Epoch 16/25\n","375/375 [==============================] - 1s 3ms/step - loss: 0.0517 - accuracy: 0.9878 - val_loss: 0.1721 - val_accuracy: 0.9719\n","Epoch 17/25\n","375/375 [==============================] - 1s 3ms/step - loss: 0.0476 - accuracy: 0.9881 - val_loss: 0.1867 - val_accuracy: 0.9709\n","Epoch 18/25\n","375/375 [==============================] - 1s 3ms/step - loss: 0.0468 - accuracy: 0.9886 - val_loss: 0.2329 - val_accuracy: 0.9703\n","Epoch 19/25\n","375/375 [==============================] - 1s 3ms/step - loss: 0.0465 - accuracy: 0.9891 - val_loss: 0.1834 - val_accuracy: 0.9753\n","Epoch 20/25\n","375/375 [==============================] - 1s 3ms/step - loss: 0.0393 - accuracy: 0.9911 - val_loss: 0.2010 - val_accuracy: 0.9724\n","Epoch 21/25\n","375/375 [==============================] - 1s 3ms/step - loss: 0.0463 - accuracy: 0.9891 - val_loss: 0.2287 - val_accuracy: 0.9722\n","Epoch 22/25\n","375/375 [==============================] - 1s 4ms/step - loss: 0.0428 - accuracy: 0.9902 - val_loss: 0.2601 - val_accuracy: 0.9704\n","Epoch 23/25\n","375/375 [==============================] - 1s 3ms/step - loss: 0.0433 - accuracy: 0.9901 - val_loss: 0.1946 - val_accuracy: 0.9757\n","Epoch 24/25\n","375/375 [==============================] - 1s 3ms/step - loss: 0.0404 - accuracy: 0.9908 - val_loss: 0.2255 - val_accuracy: 0.9722\n","Epoch 25/25\n","375/375 [==============================] - 1s 3ms/step - loss: 0.0371 - accuracy: 0.9919 - val_loss: 0.2847 - val_accuracy: 0.9695\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":279},"id":"biRh4BGy1pMo","executionInfo":{"status":"ok","timestamp":1638351766434,"user_tz":-180,"elapsed":845,"user":{"displayName":"Глеб Колонин","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"16800121630135430864"}},"outputId":"0fab39ce-f5e9-4614-befb-f920a70d58b6"},"source":["#Отображаем график точности обучения\n","plt.plot(history.history['accuracy'],\n","         label='Доля верных ответов на обучающем наборе')\n","plt.plot(history.history['val_accuracy'], \n","         label='Доля верных ответов на проверочном наборе')\n","plt.xlabel('Эпоха обучения')\n","plt.ylabel('Доля верных ответов')\n","plt.legend()\n","plt.show()\n"],"execution_count":null,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"needs_background":"light"}}]},{"cell_type":"markdown","metadata":{"id":"R2IEiqti1len"},"source":["'loss' - значения ошибки на обучающем наборе данных<br>\n","'accuracy' - точность на обучающем наборе данных<br>\n","'val_loss' - значения ошибки на проверочном наборе данных<br>\n","'val_accuracy' - точность на проверочном наборе данных"]},{"cell_type":"markdown","metadata":{"id":"9I8jQBAEksHK"},"source":["Работа модели в реальных условиях"]},{"cell_type":"code","metadata":{"id":"z7XmoLmKkrbX","colab":{"base_uri":"https://localhost:8080/","height":575},"executionInfo":{"status":"ok","timestamp":1638351767081,"user_tz":-180,"elapsed":654,"user":{"displayName":"Глеб Колонин","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"16800121630135430864"}},"outputId":"075b7b3e-f7d6-4e5e-ce36-eb8d251d0104"},"source":["# Подаем в нейросеть все картинки из тестовой выборки\n","prediction = model.predict(x_test)\n","\n","# Выбираем номер для примера\n","n = 2020\n","\n","# Покажем картинку\n","img = x_test[n]\n","img = img*255\n","img = img.reshape(28, 28)\n","img = img.astype('uint8')\n","plt.imshow(Image.fromarray(img), cmap='gray') #Отображаем изображение i-ым графиков\n","plt.show()\n","\n","print(\"Выход сети:\")\n","print(prediction[n])\n","print()\n","for i in range(10):\n","  print(i,\"->\",\"{:.40f}\".format(prediction[n][i]))\n","print()\n","print(\"Распознанная цифра: \", np.argmax(prediction[n]))\n","print(\"Верный ответ: \", np.argmax(y_test[n]))\n"],"execution_count":null,"outputs":[{"output_type":"display_data","data":{"image/png":"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\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"needs_background":"light"}},{"output_type":"stream","name":"stdout","text":["Выход сети:\n","[0.0000000e+00 6.1182028e-29 1.4070739e-27 1.0000000e+00 1.2684897e-38\n"," 1.6800409e-22 0.0000000e+00 7.9555322e-23 5.4426923e-17 1.3010127e-20]\n","\n","0 -> 0.0000000000000000000000000000000000000000\n","1 -> 0.0000000000000000000000000000611820276566\n","2 -> 0.0000000000000000000000000014070739210511\n","3 -> 1.0000000000000000000000000000000000000000\n","4 -> 0.0000000000000000000000000000000000000127\n","5 -> 0.0000000000000000000001680040856381533903\n","6 -> 0.0000000000000000000000000000000000000000\n","7 -> 0.0000000000000000000000795553222487672363\n","8 -> 0.0000000000000000544269225889927208902885\n","9 -> 0.0000000000000000000130101268954005989705\n","\n","Распознанная цифра:  3\n","Верный ответ:  3\n"]}]}]}